name: ETH Snapshot → Repo

on:
  # Run every hour at :32 *UTC*. Job filters to 01/07/13/19 Chicago time.
  schedule:
    - cron: '32 * * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

concurrency:
  group: eth-anchor
  cancel-in-progress: false

env:
  SNAPSHOT_URL: https://ethusd-anchor.vercel.app/api/eth-snapshot

jobs:
  snapshot:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Compute Chicago time
        id: tz
        run: |
          echo "NOW=$(TZ=America/Chicago date -Iseconds)" >> "$GITHUB_OUTPUT"
          echo "HOUR=$(TZ=America/Chicago date +%H)"     >> "$GITHUB_OUTPUT"

      # Hardened fetch: retries + validation; never fails the whole job
      - name: Fetch snapshot (4× daily or manual, with retry/validate)
        id: fetch
        if: contains('01,07,13,19', steps.tz.outputs.HOUR) || github.event_name == 'workflow_dispatch'
        run: |
          set -euo pipefail
          mkdir -p data
          TMP=data/_snapshot_tmp.json

          echo "Fetching $SNAPSHOT_URL with retries..."
          ok=0
          for i in 1 2 3 4 5 6; do
            # Use curl with status code capture and no cached response
            code=$(curl -sS -w '%{http_code}' -H 'Cache-Control: no-cache' \
                        --connect-timeout 10 --max-time 25 \
                        --retry 3 --retry-all-errors \
                        -o "$TMP" "$SNAPSHOT_URL" || true)

            if [ "$code" = "200" ] && jq -e '.anchor.price|numbers' "$TMP" > /dev/null 2>&1; then
              ok=1
              break
            fi
            echo "Attempt $i failed (HTTP=$code). Sleeping $((i*i))s..."
            sleep $((i*i))
          done

          if [ "$ok" = "0" ]; then
            echo "::warning::Snapshot fetch/validate failed; skipping commit this run."
            echo "fetch_status=skipped" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Persist: pretty JSON for diffs, plus append CSV row
          jq --sort-keys '.' "$TMP" > data/latest_eth_snapshot.json

          if [ ! -f data/anchor_log.csv ]; then
            echo "ts_ct,anchor,used,age_sec,cross_price,disc_level,disc_diff_pct" > data/anchor_log.csv
          fi

          jq -r --arg ts "${{ steps.tz.outputs.NOW }}" '
            [
              $ts,
              .anchor.price,
              .anchor.used,
              (.anchor.anchor_age_seconds // ""),
              (.cross_check.price // ""),
              (.cross_check.discrepancy.level // ""),
              (.cross_check.discrepancy.diff_pct // "")
            ] | @csv
          ' data/latest_eth_snapshot.json >> data/anchor_log.csv

          echo "fetch_status=ok" >> "$GITHUB_OUTPUT"

      - name: Commit & push (only when fetch succeeded)
        if: steps.fetch.outputs.fetch_status == 'ok'
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add data/latest_eth_snapshot.json data/anchor_log.csv

          if ! git diff --cached --quiet; then
            git commit -m "snapshot: ${{ steps.tz.outputs.NOW }} CT"
            git push
          else
            echo "No changes to commit."
          fi
